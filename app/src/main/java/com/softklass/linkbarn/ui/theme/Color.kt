package com.softklass.linkbarn.ui.theme

import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFFC19A6B) // Barn owl tawny/golden-brown
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFFF5E8D3) // Light golden cream
val onPrimaryContainerLight = Color(0xFF5D4A33) // Dark brown
val secondaryLight = Color(0xFF8C7A5B) // Barn owl wing color
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFE6D7C3) // Light feather color
val onSecondaryContainerLight = Color(0xFF3E3424) // Dark brown
val tertiaryLight = Color(0xFF4A4A4A) // Barn owl speckles/markings
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFDCDCDC) // Light gray
val onTertiaryContainerLight = Color(0xFF1F1F1F) // Dark gray
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF93000A)
val backgroundLight = Color(0xFFFFF8F8)
val onBackgroundLight = Color(0xFF211A1D)
val surfaceLight = Color(0xFFFFF8F3)
val onSurfaceLight = Color(0xFF201B13)
val surfaceVariantLight = Color(0xFFEBE1CF)
val onSurfaceVariantLight = Color(0xFF4C4639)
val outlineLight = Color(0xFF7D7667)
val outlineVariantLight = Color(0xFFCFC6B4)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF353027)
val inverseOnSurfaceLight = Color(0xFFFAEFE2)
val inversePrimaryLight = Color(0xFFF9B1DB)
val surfaceDimLight = Color(0xFFE3D8CC)
val surfaceBrightLight = Color(0xFFFFF8F3)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFFDF2E5)
val surfaceContainerLight = Color(0xFFF7ECDF)
val surfaceContainerHighLight = Color(0xFFF2E6D9)
val surfaceContainerHighestLight = Color(0xFFECE1D4)

val primaryLightMediumContrast = Color(0xFF8F6F45) // Darker barn owl tawny
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFFD1B48C) // Medium golden brown
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF665A41) // Darker wing color
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFFA99A7E) // Medium feather color
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF333333) // Darker gray
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF707070) // Medium gray
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF740006)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFCF2C27)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFFF8F8)
val onBackgroundLightMediumContrast = Color(0xFF211A1D)
val surfaceLightMediumContrast = Color(0xFFFFF8F3)
val onSurfaceLightMediumContrast = Color(0xFF151009)
val surfaceVariantLightMediumContrast = Color(0xFFEBE1CF)
val onSurfaceVariantLightMediumContrast = Color(0xFF3B3629)
val outlineLightMediumContrast = Color(0xFF585244)
val outlineVariantLightMediumContrast = Color(0xFF736C5D)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF353027)
val inverseOnSurfaceLightMediumContrast = Color(0xFFFAEFE2)
val inversePrimaryLightMediumContrast = Color(0xFFF9B1DB)
val surfaceDimLightMediumContrast = Color(0xFFCFC5B9)
val surfaceBrightLightMediumContrast = Color(0xFFFFF8F3)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFFDF2E5)
val surfaceContainerLightMediumContrast = Color(0xFFF2E6D9)
val surfaceContainerHighLightMediumContrast = Color(0xFFE6DBCE)
val surfaceContainerHighestLightMediumContrast = Color(0xFFDBD0C3)

val primaryLightHighContrast = Color(0xFF6B4929) // Very dark barn owl brown
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF9E7B4D) // Dark golden brown
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF4A3F2C) // Very dark wing color
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF7D6E53) // Dark feather color
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF1A1A1A) // Very dark gray
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF4D4D4D) // Dark gray
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF600004)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF98000A)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFFF8F8)
val onBackgroundLightHighContrast = Color(0xFF211A1D)
val surfaceLightHighContrast = Color(0xFFFFF8F3)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFEBE1CF)
val onSurfaceVariantLightHighContrast = Color(0xFF000000)
val outlineLightHighContrast = Color(0xFF312C20)
val outlineVariantLightHighContrast = Color(0xFF4E493B)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF353027)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFF9B1DB)
val surfaceDimLightHighContrast = Color(0xFFC1B7AB)
val surfaceBrightLightHighContrast = Color(0xFFFFF8F3)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFFAEFE2)
val surfaceContainerLightHighContrast = Color(0xFFECE1D4)
val surfaceContainerHighLightHighContrast = Color(0xFFDDD3C6)
val surfaceContainerHighestLightHighContrast = Color(0xFFCFC5B9)

val primaryDark = Color(0xFFE5C9A6) // Light barn owl tawny/golden
val onPrimaryDark = Color(0xFF3E3120) // Dark brown
val primaryContainerDark = Color(0xFF7D6545) // Medium brown
val onPrimaryContainerDark = Color(0xFFF8F0E6) // Very light cream
val secondaryDark = Color(0xFFD5C9B8) // Light wing color
val onSecondaryDark = Color(0xFF2E2A22) // Dark brown-gray
val secondaryContainerDark = Color(0xFF5E5343) // Medium-dark feather color
val onSecondaryContainerDark = Color(0xFFEEE8E0) // Light cream
val tertiaryDark = Color(0xFFB8B8B8) // Light gray
val onTertiaryDark = Color(0xFF1A1A1A) // Very dark gray
val tertiaryContainerDark = Color(0xFF3D3D3D) // Medium-dark gray
val onTertiaryContainerDark = Color(0xFFE6E6E6) // Very light gray
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF181115)
val onBackgroundDark = Color(0xFFEDDFE4)
val surfaceDark = Color(0xFF17130B)
val onSurfaceDark = Color(0xFFECE1D4)
val surfaceVariantDark = Color(0xFF4C4639)
val onSurfaceVariantDark = Color(0xFFCFC6B4)
val outlineDark = Color(0xFF989080)
val outlineVariantDark = Color(0xFF4C4639)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFECE1D4)
val inverseOnSurfaceDark = Color(0xFF353027)
val inversePrimaryDark = Color(0xFF864B70)
val surfaceDimDark = Color(0xFF17130B)
val surfaceBrightDark = Color(0xFF3E382F)
val surfaceContainerLowestDark = Color(0xFF120E07)
val surfaceContainerLowDark = Color(0xFF201B13)
val surfaceContainerDark = Color(0xFF241F17)
val surfaceContainerHighDark = Color(0xFF2F2921)
val surfaceContainerHighestDark = Color(0xFF3A342B)

val primaryDarkMediumContrast = Color(0xFFF0DCC3) // Lighter barn owl tawny/golden
val onPrimaryDarkMediumContrast = Color(0xFF2A2217) // Very dark brown
val primaryContainerDarkMediumContrast = Color(0xFFAF9570) // Light-medium brown
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFE8E0D4) // Very light wing color
val onSecondaryDarkMediumContrast = Color(0xFF1F1C17) // Very dark brown-gray
val secondaryContainerDarkMediumContrast = Color(0xFF8F8575) // Medium feather color
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFD1D1D1) // Very light gray
val onTertiaryDarkMediumContrast = Color(0xFF0D0D0D) // Almost black
val tertiaryContainerDarkMediumContrast = Color(0xFF757575) // Medium gray
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFD2CC)
val onErrorDarkMediumContrast = Color(0xFF540003)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF181115)
val onBackgroundDarkMediumContrast = Color(0xFFEDDFE4)
val surfaceDarkMediumContrast = Color(0xFF17130B)
val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkMediumContrast = Color(0xFF4C4639)
val onSurfaceVariantDarkMediumContrast = Color(0xFFE5DBC9)
val outlineDarkMediumContrast = Color(0xFFBAB1A0)
val outlineVariantDarkMediumContrast = Color(0xFF97907F)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFECE1D4)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F2921)
val inversePrimaryDarkMediumContrast = Color(0xFF6C3558)
val surfaceDimDarkMediumContrast = Color(0xFF17130B)
val surfaceBrightDarkMediumContrast = Color(0xFF4A443A)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A0703)
val surfaceContainerLowDarkMediumContrast = Color(0xFF221D15)
val surfaceContainerDarkMediumContrast = Color(0xFF2D271F)
val surfaceContainerHighDarkMediumContrast = Color(0xFF383229)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF433D34)

val primaryDarkHighContrast = Color(0xFFFAF0E1) // Very light barn owl tawny/golden
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFDEC4A0) // Light golden brown
val onPrimaryContainerDarkHighContrast = Color(0xFF1A150F) // Almost black brown
val secondaryDarkHighContrast = Color(0xFFF7F3ED) // Almost white wing color
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFC0B7A7) // Light feather color
val onSecondaryContainerDarkHighContrast = Color(0xFF0F0D0A) // Almost black
val tertiaryDarkHighContrast = Color(0xFFEBEBEB) // Almost white gray
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFA0A0A0) // Light gray
val onTertiaryContainerDarkHighContrast = Color(0xFF050505) // Almost black
val errorDarkHighContrast = Color(0xFFFFECE9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
val onErrorContainerDarkHighContrast = Color(0xFF220001)
val backgroundDarkHighContrast = Color(0xFF181115)
val onBackgroundDarkHighContrast = Color(0xFFEDDFE4)
val surfaceDarkHighContrast = Color(0xFF17130B)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF4C4639)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
val outlineDarkHighContrast = Color(0xFFF9EFDC)
val outlineVariantDarkHighContrast = Color(0xFFCBC2B0)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFECE1D4)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF6C3558)
val surfaceDimDarkHighContrast = Color(0xFF17130B)
val surfaceBrightDarkHighContrast = Color(0xFF564F45)
val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
val surfaceContainerLowDarkHighContrast = Color(0xFF241F17)
val surfaceContainerDarkHighContrast = Color(0xFF353027)
val surfaceContainerHighDarkHighContrast = Color(0xFF413A31)
val surfaceContainerHighestDarkHighContrast = Color(0xFF4C463C)
